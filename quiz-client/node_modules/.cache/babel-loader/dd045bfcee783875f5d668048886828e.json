{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barba\\\\Desktop\\\\Asp.Net Core\\\\quiz-client\\\\src\\\\components\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { Card, CardContent, CardHeader, List, ListItemButton, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { createAPIEndpoint, ENDPOINTS } from '../api';\nimport useStateContext from '../hooks/useStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const [qns, setQns] = useState([]);\n  const [qnIndex, setQnIndex] = useState(0);\n  const [timeTaken, setTimeTaken] = useState(0);\n\n  const startTimer = () => {\n    setInterval(() => {\n      setTimeTaken(prev => prev + 1);\n    }, [1000]);\n  };\n\n  useEffect(() => {\n    createAPIEndpoint(ENDPOINTS.question).fetch().then(res => {\n      setQns(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return qns.length != 0 ? /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 640,\n      mx: 'auto',\n      mt: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: 'Question ' + (qnIndex + 1) + ' of 5'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: qns[qnIndex].qnInWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: qns[qnIndex].options.map((item, idx) => /*#__PURE__*/_jsxDEV(ListItemButton, {\n          disableRipple: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: String.fromCharCode(65 + idx) + \" . \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this), \" \", item]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 15\n  }, this) : null;\n}\n\n_s(Quiz, \"g3G0cKBvsQgfL8Cb8Kkgw1zjEjA=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/barba/Desktop/Asp.Net Core/quiz-client/src/components/Quiz.js"],"names":["Card","CardContent","CardHeader","List","ListItemButton","Typography","React","useEffect","useState","createAPIEndpoint","ENDPOINTS","useStateContext","Quiz","qns","setQns","qnIndex","setQnIndex","timeTaken","setTimeTaken","startTimer","setInterval","prev","question","fetch","then","res","data","console","log","catch","err","length","maxWidth","mx","mt","qnInWords","options","map","item","idx","String","fromCharCode"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,IAAxC,EAA8CC,cAA9C,EAA8DC,UAA9D,QAAgF,eAAhF;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,iBAAT,EAA4BC,SAA5B,QAA6C,QAA7C;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE3B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMW,UAAU,GAAG,MAAM;AACrBC,IAAAA,WAAW,CAAC,MAAM;AACdF,MAAAA,YAAY,CAACG,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAZ;AACH,KAFU,EAER,CAAC,IAAD,CAFQ,CAAX;AAGH,GAJD;;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,iBAAiB,CAACC,SAAS,CAACY,QAAX,CAAjB,CACKC,KADL,GAEKC,IAFL,CAEUC,GAAG,IAAI;AACTX,MAAAA,MAAM,CAACW,GAAG,CAACC,IAAL,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACH,KALL,EAMKG,KANL,CAMWC,GAAG,IAAI;AAAEH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AAAmB,KANvC;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,SACIjB,GAAG,CAACkB,MAAJ,IAAc,CAAd,gBACM,QAAC,IAAD;AACE,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,EAAE,EAAE,MAArB;AAA6BC,MAAAA,EAAE,EAAE;AAAjC,KADN;AAAA,4BAEE,QAAC,UAAD;AACI,MAAA,KAAK,EAAE,eAAenB,OAAO,GAAG,CAAzB,IAA8B;AADzC;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,WAAD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,kBACKF,GAAG,CAACE,OAAD,CAAH,CAAaoB;AADlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAA,kBACKtB,GAAG,CAACE,OAAD,CAAH,CAAaqB,OAAb,CAAqBC,GAArB,CAAyB,CAACC,IAAD,EAAOC,GAAP,kBACtB,QAAC,cAAD;AACI,UAAA,aAAa,MADjB;AAAA,iCAEI;AAAA,oCACI;AAAA,wBAAIC,MAAM,CAACC,YAAP,CAAoB,KAAKF,GAAzB,IAAgC;AAApC;AAAA;AAAA;AAAA;AAAA,oBADJ,OACoDD,IADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,WAAqBC,GAArB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADN,GAsBM,IAvBV;AAyBH;;GA/CuB3B,I;;KAAAA,I","sourcesContent":["import { Card, CardContent, CardHeader, List, ListItemButton, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { createAPIEndpoint, ENDPOINTS } from '../api';\r\nimport useStateContext from '../hooks/useStateContext';\r\n\r\nexport default function Quiz() {\r\n\r\n    const [qns, setQns] = useState([])\r\n    const [qnIndex, setQnIndex] = useState(0)\r\n    const [timeTaken, setTimeTaken] = useState(0)\r\n\r\n    const startTimer = () => {\r\n        setInterval(() => {\r\n            setTimeTaken(prev => prev + 1)\r\n        }, [1000])\r\n    }\r\n\r\n    useEffect(() => {\r\n        createAPIEndpoint(ENDPOINTS.question)\r\n            .fetch()\r\n            .then(res => {\r\n                setQns(res.data)\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => { console.log(err); })\r\n    }, [])\r\n\r\n    return (\r\n        qns.length != 0\r\n            ? <Card\r\n                sx={{ maxWidth: 640, mx: 'auto', mt: 5 }}>\r\n                <CardHeader\r\n                    title={'Question ' + (qnIndex + 1) + ' of 5'} />\r\n                <CardContent>\r\n                    <Typography variant=\"h6\">\r\n                        {qns[qnIndex].qnInWords}\r\n                    </Typography>\r\n                    <List>\r\n                        {qns[qnIndex].options.map((item, idx) =>\r\n                            <ListItemButton key={idx}\r\n                                disableRipple>\r\n                                <div>\r\n                                    <b>{String.fromCharCode(65 + idx) + \" . \"}</b> {item}\r\n                                </div>\r\n                            </ListItemButton>\r\n                        )}\r\n\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n            : null\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}