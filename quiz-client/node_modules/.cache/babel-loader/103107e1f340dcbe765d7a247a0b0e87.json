{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barba\\\\Desktop\\\\Asp.Net Core\\\\quiz-client\\\\src\\\\components\\\\Result.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Card, CardContent, CardMedia, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { createAPIEndpoint, ENDPOINTS } from '../api';\nimport useStateContext from '../hooks/useStateContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Result() {\n  _s();\n\n  const {\n    context,\n    setContext\n  } = useStateContext();\n  const {\n    score,\n    setScore\n  } = useState(0);\n  const {\n    qnAnswers,\n    setQnAnswers\n  } = useState([]);\n  useEffect(() => {\n    const ids = context.selectedOptions.map(x => x.qnId);\n    createAPIEndpoint(ENDPOINTS.getAnswers).post(ids).then(res => {\n      const qna = context.selectedOptions.map(x => ({ ...x,\n        ...res.data.find(y => y.qnId == x.qnId)\n      }));\n      setQnAnswers(qna);\n      calculateScore(qna);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const calculateScore = qna => {\n    let tempScore = qna.reduce((acc, curr) => {\n      return curr.answer == curr.selected ? acc + 1 : acc;\n    }, 0);\n    setScore(tempScore);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mt: 5,\n      displat: 'flex',\n      width: '100%',\n      maxWidth: 640,\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        displat: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flex: '1 0 auto',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Congratulations!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"YOUR SCORE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      sx: {\n        width: 220\n      },\n      image: \"./result.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Result, \"usxOX2sgSx54qbn0sY2RlWkvyiw=\", false, function () {\n  return [useStateContext];\n});\n\n_c = Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["C:/Users/barba/Desktop/Asp.Net Core/quiz-client/src/components/Result.js"],"names":["Box","Card","CardContent","CardMedia","Typography","React","useEffect","useState","createAPIEndpoint","ENDPOINTS","useStateContext","Result","context","setContext","score","setScore","qnAnswers","setQnAnswers","ids","selectedOptions","map","x","qnId","getAnswers","post","then","res","qna","data","find","y","calculateScore","catch","err","console","log","tempScore","reduce","acc","curr","answer","selected","mt","displat","width","maxWidth","mx","flexDirection","flexGrow","flex","textAlign"],"mappings":"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","sourcesContent":["import { Box, Card, CardContent, CardMedia, Typography } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { createAPIEndpoint, ENDPOINTS } from '../api';\r\nimport useStateContext from '../hooks/useStateContext';\r\n\r\nexport default function Result() {\r\n    const { context, setContext } = useStateContext();\r\n    const { score, setScore } = useState(0);\r\n    const { qnAnswers, setQnAnswers } = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        const ids = context.selectedOptions.map(x => x.qnId)\r\n        createAPIEndpoint(ENDPOINTS.getAnswers)\r\n            .post(ids)\r\n            .then(res => {\r\n                const qna = context.selectedOptions\r\n                    .map(x => ({\r\n                        ...x,\r\n                        ...(res.data.find(y => y.qnId == x.qnId))\r\n                    }))\r\n                setQnAnswers(qna)\r\n                calculateScore(qna)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const calculateScore = qna => {\r\n        let tempScore = qna.reduce((acc, curr) => {\r\n            return curr.answer == curr.selected ? acc + 1 : acc;\r\n        }, 0)\r\n        setScore(tempScore)\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ mt: 5, displat: 'flex', width: '100%', maxWidth: 640, mx: 'auto' }}>\r\n            <Box sx={{ displat: 'flex', flexDirection: 'column', flexGrow: 1 }}>\r\n                <CardContent sx={{ flex: '1 0 auto', textAlign: 'center' }}>\r\n                    <Typography variant=\"h4\">Congratulations!</Typography>\r\n                    <Typography variant=\"h6\">\r\n                        YOUR SCORE\r\n                    </Typography>\r\n\r\n                </CardContent>\r\n            </Box>\r\n            <CardMedia\r\n                component=\"img\"\r\n                sx={{ width: 220 }}\r\n                image=\"./result.png\"\r\n            />\r\n        </Card>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}