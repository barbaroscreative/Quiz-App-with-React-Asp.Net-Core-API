{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barba\\\\Desktop\\\\Asp.Net Core\\\\quiz-client\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Card, CardContent, TextField, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport Center from './Center';\nimport useForm from '../hooks/useForm';\nimport { createAPIEndpoint, ENDPOINTS } from '../api/index';\nimport { toBeEmptyDOMElement } from '@testing-library/jest-dom/dist/matchers';\nimport useStateContext from '../hooks/useStateContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFreshModel = () => ({\n  name: '',\n  email: ''\n});\n\nexport default function Login() {\n  _s();\n\n  const {\n    context,\n    setContext\n  } = useStateContext();\n  const navigate = useNavigate();\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange\n  } = useForm(getFreshModel);\n\n  const login = e => {\n    e.preventDefault();\n    if (validate()) createAPIEndpoint(ENDPOINTS.participant).post(values).then(res => {\n      setContext({\n        participantId: res.data.participantId\n      });\n      navigate('/quiz');\n    }).catch(err => console.error(err));\n  };\n\n  const validate = () => {\n    let temp = {};\n    temp.email = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i.test(values.email) ? \"\" : \"Email is not valid.\";\n    temp.name = values.name != \"\" ? \"\" : \"This field is required.\";\n    setErrors(temp);\n    return Object.values(temp).every(x => x == \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: 400\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          sx: {\n            my: 3\n          },\n          children: \"Quiz App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            '& .MuiTextField-root': {\n              m: 1,\n              width: '90%'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            autoComplete: \"on\",\n            onSubmit: login,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              name: \"email\",\n              value: values.email,\n              onChange: handleInputChange,\n              variant: \"outlined\",\n              ...(errors.email && {\n                error: true,\n                helperText: errors.email\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              name: \"name\",\n              value: values.name,\n              onChange: handleInputChange,\n              variant: \"outlined\",\n              ...(errors.name && {\n                error: true,\n                helperText: errors.name\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                width: '90%'\n              },\n              children: \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"FQlJ0OW36Rf6NYWkh9p70l35QyI=\", false, function () {\n  return [useStateContext, useNavigate, useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/barba/Desktop/Asp.Net Core/quiz-client/src/components/Login.js"],"names":["React","Button","Card","CardContent","TextField","Typography","Box","Center","useForm","createAPIEndpoint","ENDPOINTS","toBeEmptyDOMElement","useStateContext","useNavigate","getFreshModel","name","email","Login","context","setContext","navigate","values","setValues","errors","setErrors","handleInputChange","login","e","preventDefault","validate","participant","post","then","res","participantId","data","catch","err","console","error","temp","test","Object","every","x","width","textAlign","my","m","helperText"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,eAAjE;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,iBAAT,EAA4BC,SAA5B,QAA6C,cAA7C;AACA,SAASC,mBAAT,QAAoC,yCAApC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,aAAa,GAAG,OAAO;AACzBC,EAAAA,IAAI,EAAE,EADmB;AAEzBC,EAAAA,KAAK,EAAE;AAFkB,CAAP,CAAtB;;AAKA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE5B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BP,eAAe,EAA/C;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM;AACFQ,IAAAA,MADE;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,MAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA;AALE,MAMFjB,OAAO,CAACM,aAAD,CANX;;AAQA,QAAMY,KAAK,GAAGC,CAAC,IAAI;AACfA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,QAAQ,EAAZ,EACIpB,iBAAiB,CAACC,SAAS,CAACoB,WAAX,CAAjB,CACKC,IADL,CACUV,MADV,EAEKW,IAFL,CAEUC,GAAG,IAAI;AACTd,MAAAA,UAAU,CAAC;AAAEe,QAAAA,aAAa,EAAED,GAAG,CAACE,IAAJ,CAASD;AAA1B,OAAD,CAAV;AACAd,MAAAA,QAAQ,CAAC,OAAD,CAAR;AAEH,KANL,EAOKgB,KAPL,CAOWC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAPlB;AAQP,GAXD;;AAaA,QAAMR,QAAQ,GAAG,MAAM;AACnB,QAAIW,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACxB,KAAL,GAAc,sHAAD,CAAyHyB,IAAzH,CAA8HpB,MAAM,CAACL,KAArI,IAA8I,EAA9I,GAAmJ,qBAAhK;AACAwB,IAAAA,IAAI,CAACzB,IAAL,GAAYM,MAAM,CAACN,IAAP,IAAe,EAAf,GAAoB,EAApB,GAAyB,yBAArC;AACAS,IAAAA,SAAS,CAACgB,IAAD,CAAT;AACA,WAAOE,MAAM,CAACrB,MAAP,CAAcmB,IAAd,EAAoBG,KAApB,CAA0BC,CAAC,IAAIA,CAAC,IAAI,EAApC,CAAP;AACH,GAND;;AASA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAjB;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,EAAE,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AACL,oCAAwB;AACpBC,cAAAA,CAAC,EAAE,CADiB;AAEpBH,cAAAA,KAAK,EAAE;AAFa;AADnB,WAAT;AAAA,iCAMI;AAAM,YAAA,UAAU,MAAhB;AAAiB,YAAA,YAAY,EAAC,IAA9B;AAAmC,YAAA,QAAQ,EAAEnB,KAA7C;AAAA,oCACI,QAAC,SAAD;AACI,cAAA,KAAK,EAAC,OADV;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,KAAK,EAAEL,MAAM,CAACL,KAHlB;AAII,cAAA,QAAQ,EAAES,iBAJd;AAKI,cAAA,OAAO,EAAC,UALZ;AAAA,kBAMSF,MAAM,CAACP,KAAP,IAAgB;AAAEuB,gBAAAA,KAAK,EAAE,IAAT;AAAeU,gBAAAA,UAAU,EAAE1B,MAAM,CAACP;AAAlC,eANzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI,QAAC,SAAD;AACI,cAAA,KAAK,EAAC,MADV;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,KAAK,EAAEK,MAAM,CAACN,IAHlB;AAII,cAAA,QAAQ,EAAEU,iBAJd;AAKI,cAAA,OAAO,EAAC,UALZ;AAAA,kBAMSF,MAAM,CAACR,IAAP,IAAe;AAAEwB,gBAAAA,KAAK,EAAE,IAAT;AAAeU,gBAAAA,UAAU,EAAE1B,MAAM,CAACR;AAAlC,eANxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,eAeI,QAAC,MAAD;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,OAAO,EAAC,WAFZ;AAGI,cAAA,IAAI,EAAC,OAHT;AAII,cAAA,EAAE,EAAE;AAAE8B,gBAAAA,KAAK,EAAE;AAAT,eAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH;;GA5EuB5B,K;UAEYL,e,EACfC,W,EAQbL,O;;;KAXgBS,K","sourcesContent":["import React from 'react'\r\nimport { Button, Card, CardContent, TextField, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport Center from './Center'\r\nimport useForm from '../hooks/useForm'\r\nimport { createAPIEndpoint, ENDPOINTS } from '../api/index'\r\nimport { toBeEmptyDOMElement } from '@testing-library/jest-dom/dist/matchers'\r\nimport useStateContext from '../hooks/useStateContext'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst getFreshModel = () => ({\r\n    name: '',\r\n    email: ''\r\n})\r\n\r\nexport default function Login() {\r\n\r\n    const { context, setContext } = useStateContext();\r\n    const navigate = useNavigate();\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange\r\n    } = useForm(getFreshModel);\r\n\r\n    const login = e => {\r\n        e.preventDefault();\r\n        if (validate())\r\n            createAPIEndpoint(ENDPOINTS.participant)\r\n                .post(values)\r\n                .then(res => {\r\n                    setContext({ participantId: res.data.participantId })\r\n                    navigate('/quiz')\r\n\r\n                })\r\n                .catch(err => console.error(err))\r\n    }\r\n\r\n    const validate = () => {\r\n        let temp = {}\r\n        temp.email = (/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i).test(values.email) ? \"\" : \"Email is not valid.\"\r\n        temp.name = values.name != \"\" ? \"\" : \"This field is required.\"\r\n        setErrors(temp)\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n\r\n    return (\r\n        <Center>\r\n            <Card sx={{ width: 400 }}>\r\n                <CardContent sx={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h3\" sx={{ my: 3 }}>\r\n                        Quiz App\r\n                    </Typography>\r\n                    <Box sx={{\r\n                        '& .MuiTextField-root': {\r\n                            m: 1,\r\n                            width: '90%'\r\n                        }\r\n                    }}>\r\n                        <form noValidate autoComplete=\"on\" onSubmit={login}>\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleInputChange}\r\n                                variant=\"outlined\"\r\n                                {...(errors.email && { error: true, helperText: errors.email })} />\r\n                            <TextField\r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                value={values.name}\r\n                                onChange={handleInputChange}\r\n                                variant=\"outlined\"\r\n                                {...(errors.name && { error: true, helperText: errors.name })} />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                sx={{ width: '90%' }}>Start</Button>\r\n                        </form>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </Center>\r\n\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}