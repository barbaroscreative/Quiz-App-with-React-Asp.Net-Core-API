{"ast":null,"code":"import axios from 'axios';\nexport const BASE_URL = 'http://localhost:5193/';\nexport const ENDPOINTS = {\n  participant: 'participant',\n  question: 'question',\n  getAnswers: 'question/getans'\n};\nexport const createAPIEndpoint = endpoint => {\n  let url = BASE_URL + 'api/' + endpoint + '/';\n  return {\n    fetch: () => axios.get(url),\n    fetchById: id => axios.get(url + id),\n    post: newRecord => axios.post(url, newRecord),\n    put: (id, updateRecord) => axios.put(url + id, updateRecord),\n    delete: id => axios.delete(url + id)\n  };\n};","map":{"version":3,"sources":["C:/Users/barba/Desktop/Asp.Net Core/quiz-client/src/api/index.js"],"names":["axios","BASE_URL","ENDPOINTS","participant","question","getAnswers","createAPIEndpoint","endpoint","url","fetch","get","fetchById","id","post","newRecord","put","updateRecord","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,wBAAjB;AAEP,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,WAAW,EAAE,aADQ;AAErBC,EAAAA,QAAQ,EAAE,UAFW;AAGrBC,EAAAA,UAAU,EAAE;AAHS,CAAlB;AAMP,OAAO,MAAMC,iBAAiB,GAAGC,QAAQ,IAAI;AAEzC,MAAIC,GAAG,GAAGP,QAAQ,GAAG,MAAX,GAAoBM,QAApB,GAA+B,GAAzC;AACA,SAAO;AACHE,IAAAA,KAAK,EAAE,MAAMT,KAAK,CAACU,GAAN,CAAUF,GAAV,CADV;AAEHG,IAAAA,SAAS,EAAEC,EAAE,IAAIZ,KAAK,CAACU,GAAN,CAAUF,GAAG,GAAGI,EAAhB,CAFd;AAGHC,IAAAA,IAAI,EAAEC,SAAS,IAAId,KAAK,CAACa,IAAN,CAAWL,GAAX,EAAgBM,SAAhB,CAHhB;AAIHC,IAAAA,GAAG,EAAE,CAACH,EAAD,EAAKI,YAAL,KAAsBhB,KAAK,CAACe,GAAN,CAAUP,GAAG,GAAGI,EAAhB,EAAoBI,YAApB,CAJxB;AAKHC,IAAAA,MAAM,EAAEL,EAAE,IAAIZ,KAAK,CAACiB,MAAN,CAAaT,GAAG,GAAGI,EAAnB;AALX,GAAP;AAOH,CAVM","sourcesContent":["import axios from 'axios';\r\n\r\nexport const BASE_URL = 'http://localhost:5193/';\r\n\r\nexport const ENDPOINTS = {\r\n    participant: 'participant',\r\n    question: 'question',\r\n    getAnswers: 'question/getans'\r\n}\r\n\r\nexport const createAPIEndpoint = endpoint => {\r\n\r\n    let url = BASE_URL + 'api/' + endpoint + '/';\r\n    return {\r\n        fetch: () => axios.get(url),\r\n        fetchById: id => axios.get(url + id),\r\n        post: newRecord => axios.post(url, newRecord),\r\n        put: (id, updateRecord) => axios.put(url + id, updateRecord),\r\n        delete: id => axios.delete(url + id),\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}